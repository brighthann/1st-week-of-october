version: '3.8'

services:
  db:
    image: postgres:13
    container_name: dashmonitor_db
    environment:
      POSTGRES_DB: monitoring
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d monitoring"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: dashmonitor_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/monitoring
      - API_DEBUG=false
      - CHECK_INTERVAL=30
      - ALERT_THRESHOLD=2
      - TIMEOUT_THRESHOLD=5
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    networks:
      - monitoring-network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  dashboard:
    build:
      context: .
      dockerfile: docker/dashboard/Dockerfile
    container_name: dashmonitor_dashboard
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:8000
    volumes:
      - ./src/dashboard:/app/src/dashboard
    networks:
      - monitoring-network
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: dashmonitor_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring-network
    depends_on:
      - api

networks:
  monitoring-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data: